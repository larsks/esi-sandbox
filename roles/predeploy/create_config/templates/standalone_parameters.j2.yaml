---
resource_registry:
  OS::TripleO::Services::NovaCompute: OS::Heat::None
  OS::TripleO::Services::NovaLibvirt: OS::Heat::None

{% if 'ovn' in neutron_mechanism_drivers %}
  # These services are disabled my neutron-ovn-standalone.yaml and must be
  # explicitly re-enabled to support Ironic.
  OS::TripleO::Services::NeutronDhcpAgent: {{ tripleo_heat_templates_dir }}/deployment/neutron/neutron-dhcp-container-puppet.yaml
  OS::TripleO::Services::NeutronMetadataAgent: {{ tripleo_heat_templates_dir }}/deployment/neutron/neutron-metadata-container-puppet.yaml
{% endif %}

parameter_defaults:
  CertmongerCA: local
  CloudName: {{ standalone_ip }}
  ControlPlaneStaticRoutes: []
  Debug: true
  DeploymentUser: stack
  DnsServers: {{ standalone_nameservers|to_yaml }}
  DockerInsecureRegistryAddress:
    - {{ standalone_ip }}:8787
  NeutronPublicInterface: {{ standalone_interface }}
  NeutronBridgeMappings: provision:br-ctlplane
  NeutronPhysicalBridge: br-ctlplane
  NeutronFlatNetworks: provision
  NeutronNetworkVLANRanges: ''
  NeutronMechanismDrivers: {{ neutron_mechanism_drivers|to_json }}

  # configure neutron to provide routes to the metadata
  # service via dhcp
  NeutronEnableIsolatedMetadata: true
  NeutronEnableMetadataNetwork: true

  StandaloneEnableRoutedNetworks: false
  StandaloneHomeDir: {{ standalone_home }}
  StandaloneLocalMtu: 1500
  PasswordAuthentication: 'no'
  DockerOptions: >-
    --log-driver=journald --signature-verification=false
    --iptables=false --live-restore
  IronicEnabledHardwareTypes:
    - ipmi
  IronicEnabledPowerInterfaces:
    - ipmitool
  IronicEnabledManagementInterfaces:
    - ipmitool
  IronicCleaningDiskErase: metadata
  IronicInspectorSubnets:
    - ip_range: "{{ standalone_range_inspection }}"
  IronicInspectorInterface: 'br-ctlplane'
